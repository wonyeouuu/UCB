{"version":3,"sources":["materialize.clockpicker.js"],"names":[],"mappingsfile":"materialize.clockpicker.main.js","sourcesContent":["/*!\n * ClockPicker v0.0.7 (http://weareoutman.github.io/clockpicker/)\n * Copyright 2014 Wang Shenwei.\n * Licensed under MIT (https://github.com/weareoutman/clockpicker/blob/gh-pages/LICENSE)\n *\n * Further modified\n * Copyright 2015 Ching Yaw Hao.\n */\n\n;(function(){\n\tvar $ = window.jQuery,\n\t\t\t$win = $(window),\n\t\t\t$doc = $(document);\n\n\t// Can I use inline svg ?\n\tvar svgNS = 'http://www.w3.org/2000/svg',\n\t\t  svgSupported = 'SVGAngle' in window && (function() {\n\t\t\t  var supported,\n\t\t\t\tel = document.createElement('div');\n\t\t\t\tel.innerHTML = '<svg/>';\n\t\t\t\tsupported = (el.firstChild && el.firstChild.namespaceURI) == svgNS;\n\t\t\t\tel.innerHTML = '';\n\t\t\t\treturn supported;\n\t\t\t})();\n\n\t// Can I use transition ?\n\tvar transitionSupported = (function() {\n\t\tvar style = document.createElement('div').style;\n\t\treturn 'transition' in style ||\n\t\t\t\t\t 'WebkitTransition' in style ||\n\t\t\t\t   'MozTransition' in style ||\n\t\t\t\t\t 'msTransition' in style ||\n\t\t\t\t\t 'OTransition' in style;\n\t})();\n\n\t// Listen touch events in touch screen device, instead of mouse events in desktop.\n\tvar touchSupported = 'ontouchstart' in window,\n\t\t\tmousedownEvent = 'mousedown' + ( touchSupported ? ' touchstart' : ''),\n\t\t\tmousemoveEvent = 'mousemove.clockpicker' + ( touchSupported ? ' touchmove.clockpicker' : ''),\n\t\t\tmouseupEvent = 'mouseup.clockpicker' + ( touchSupported ? ' touchend.clockpicker' : '');\n\n\t// Vibrate the device if supported\n\tvar vibrate = navigator.vibrate ? 'vibrate' : navigator.webkitVibrate ? 'webkitVibrate' : null;\n\n\tfunction createSvgElement(name) {\n\t\treturn document.createElementNS(svgNS, name);\n\t}\n\n\tfunction leadingZero(num) {\n\t\treturn (num < 10 ? '0' : '') + num;\n\t}\n\n\t// Get a unique id\n\tvar idCounter = 0;\n\tfunction uniqueId(prefix) {\n\t\tvar id = ++idCounter + '';\n\t\treturn prefix ? prefix + id : id;\n\t}\n\n\t// Clock size\n\tvar dialRadius = 135,\n\t\t\touterRadius = 110,\n\t\t\t// innerRadius = 80 on 12 hour clock\n\t\t\tinnerRadius = 80,\n\t\t\ttickRadius = 20,\n\t\t\tdiameter = dialRadius * 2,\n\t\t\tduration = transitionSupported ? 350 : 1;\n\n\t// Popover template\n\tvar tpl = [\n\t\t'<div class=\"clockpicker picker\">',\n\t\t\t'<div class=\"picker__holder\">',\n\t\t\t\t'<div class=\"picker__frame\">',\n\t\t\t\t\t'<div class=\"picker__wrap\">',\n\t\t\t\t\t\t'<div class=\"picker__box\">',\n\t\t\t\t\t\t\t'<div class=\"picker__date-display\">',\n\t\t\t\t\t\t\t\t'<div class=\"clockpicker-display\">',\n\t\t\t\t\t\t\t\t\t'<div class=\"clockpicker-display-column\">',\n\t\t\t\t\t\t\t\t\t\t'<span class=\"clockpicker-span-hours text-primary\"></span>',\n\t\t\t\t\t\t\t\t\t\t':',\n\t\t\t\t\t\t\t\t\t\t'<span class=\"clockpicker-span-minutes\"></span>',\n\t\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t\t'<div class=\"clockpicker-display-column clockpicker-display-am-pm\">',\n\t\t\t\t\t\t\t\t\t\t'<div class=\"clockpicker-span-am-pm\"></div>',\n\t\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'<div class=\"picker__calendar-container\">',\n\t\t\t\t\t\t\t\t'<div class=\"clockpicker-plate\">',\n\t\t\t\t\t\t\t\t\t'<div class=\"clockpicker-canvas\"></div>',\n\t\t\t\t\t\t\t\t\t'<div class=\"clockpicker-dial clockpicker-hours\"></div>',\n\t\t\t\t\t\t\t\t\t'<div class=\"clockpicker-dial clockpicker-minutes clockpicker-dial-out\"></div>',\n\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t\t'<div class=\"clockpicker-am-pm-block\">',\n\t\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t\t'<div class=\"picker__footer\">',\n\t\t\t\t\t\t\t'</div>',\n\t\t\t\t\t\t'</div>',\n\t\t\t\t\t'</div>',\n\t\t\t\t'</div>',\n\t\t\t'</div>',\n\t\t'</div>'\n\t].join('');\n\n\t// ClockPicker\n\tfunction ClockPicker(element, options) {\n\t\tvar popover = $(tpl),\n\t\t\t\tplate = popover.find('.clockpicker-plate'),\n\t\t\t\tholder = popover.find('.picker__holder'),\n\t\t\t\thoursView = popover.find('.clockpicker-hours'),\n\t\t\t\tminutesView = popover.find('.clockpicker-minutes'),\n\t\t\t\tamPmBlock = popover.find('.clockpicker-am-pm-block'),\n\t\t\t\tisInput = element.prop('tagName') === 'INPUT',\n\t\t\t\tinput = isInput ? element : element.find('input'),\n\t\t\t\tlabel = $(\"label[for=\" + input.attr(\"id\") + \"]\"),\n\t\t\t\tself = this,\n\t\t\t\ttimer;\n\n\t\tthis.id = uniqueId('cp');\n\t\tthis.element = element;\n\t\tthis.holder = holder;\n\t\tthis.options = options;\n\t\tthis.isAppended = false;\n\t\tthis.isShown = false;\n\t\tthis.currentView = 'hours';\n\t\tthis.isInput = isInput;\n\t\tthis.input = input;\n\t\tthis.label = label;\n\t\tthis.popover = popover;\n\t\tthis.plate = plate;\n\t\tthis.hoursView = hoursView;\n\t\tthis.minutesView = minutesView;\n\t\tthis.amPmBlock = amPmBlock;\n\t\tthis.spanHours = popover.find('.clockpicker-span-hours');\n\t\tthis.spanMinutes = popover.find('.clockpicker-span-minutes');\n\t\tthis.spanAmPm = popover.find('.clockpicker-span-am-pm');\n\t\tthis.footer = popover.find('.picker__footer');\n\t\tthis.amOrPm = \"PM\";\n\n\t\t// Setup for for 12 hour clock if option is selected\n\t\tif (options.twelvehour) {\n\t\t\tvar  amPmButtonsTemplate = [\n\t\t\t\t'<div class=\"clockpicker-am-pm-block\">',\n\t\t\t\t\t'<button type=\"button\" class=\"btn-floating btn-flat clockpicker-button clockpicker-am-button\">',\n\t\t\t\t\t\t'AM',\n\t\t\t\t\t'</button>',\n\t\t\t\t\t'<button type=\"button\" class=\"btn-floating btn-flat clockpicker-button clockpicker-pm-button\">',\n\t\t\t\t\t\t'PM',\n\t\t\t\t\t'</button>',\n\t\t\t\t'</div>'\n\t\t\t].join('');\n\n\t\t\tvar amPmButtons = $(amPmButtonsTemplate);\n\n\t\t\tif(!options.ampmclickable) {\n\t\t\t\t$('<button type=\"button\" class=\"btn-floating btn-flat clockpicker-button am-button\" tabindex=\"1\">' + \"AM\" + '</button>').on(\"click\", function() {\n\t\t\t\t\tself.amOrPm = \"AM\";\n\t\t\t\t\tself.amPmBlock.children('.pm-button').removeClass('active');\n\t\t\t\t\tself.amPmBlock.children('.am-button').addClass('active');\n\t\t\t\t\tself.spanAmPm.empty().append('AM');\n\t\t\t\t}).appendTo(this.amPmBlock);\n\t\t\t\t$('<button type=\"button\" class=\"btn-floating btn-flat clockpicker-button pm-button\" tabindex=\"2\">' + \"PM\" + '</button>').on(\"click\", function() {\n\t\t\t\t\tself.amOrPm = 'PM';\n\t\t\t\t\tself.amPmBlock.children('.am-button').removeClass('active');\n\t\t\t\t\tself.amPmBlock.children('.pm-button').addClass('active');\n\t\t\t\t\tself.spanAmPm.empty().append('PM');\n\t\t\t\t}).appendTo(this.amPmBlock);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.spanAmPm.empty();\n\t\t\t\t$('<div id=\"click-am\">AM</div>').on(\"click\", function() {\n\t\t\t\t\tself.spanAmPm.children('#click-am').addClass(\"text-primary\");\n\t\t\t\t\tself.spanAmPm.children('#click-pm').removeClass(\"text-primary\");\n\t\t\t\t\tself.amOrPm = \"AM\";\n\t\t\t\t}).appendTo(this.spanAmPm);\n\t\t\t\t$('<div id=\"click-pm\">PM</div>').on(\"click\", function() {\n\t\t\t\t\tself.spanAmPm.children('#click-pm').addClass(\"text-primary\");\n\t\t\t\t\tself.spanAmPm.children('#click-am').removeClass(\"text-primary\");\n\t\t\t\t\tself.amOrPm = 'PM';\n\t\t\t\t}).appendTo(this.spanAmPm);\n\t\t\t}\n\t\t}\n\t\t//force input to type ( disable type=time )\n\t\tinput.attr('type','text');\n\n\t\tif(options.darktheme)\n\t\t\tpopover.addClass('darktheme');\n\n\t\t\t// If autoclose is not setted, append a button\n\t\t$('<button type=\"button\" class=\"btn-flat clockpicker-button\" tabindex=\"' + (options.twelvehour? '3' : '1') + '\">' + options.donetext + '</button>').click($.proxy(this.done, this)).appendTo(this.footer);\n\n\t\tthis.spanHours.click($.proxy(this.toggleView, this, 'hours'));\n\t\tthis.spanMinutes.click($.proxy(this.toggleView, this, 'minutes'));\n\n\t\t// Show or toggle\n\t\tinput.on('focus.clockpicker click.clockpicker', $.proxy(this.show, this));\n\n\t\t// Build ticks\n\t\tvar tickTpl = $('<div class=\"clockpicker-tick\"></div>'),\n\t\t\t\ti, tick, radian, radius;\n\n\t\t// Hours view\n\t\tif (options.twelvehour) {\n\t\t\tfor (i = 1; i < 13; i += 1) {\n\t\t\t\ttick = tickTpl.clone();\n\t\t\t\tradian = i / 6 * Math.PI;\n\t\t\t\tradius = outerRadius;\n\t\t\t\ttick.css('font-size', '140%');\n\t\t\t\ttick.css({\n\t\t\t\t\tleft: dialRadius + Math.sin(radian) * radius - tickRadius,\n\t\t\t\t\ttop: dialRadius - Math.cos(radian) * radius - tickRadius\n\t\t\t\t});\n\t\t\t\ttick.html(i === 0 ? '00' : i);\n\t\t\t\thoursView.append(tick);\n\t\t\t\ttick.on(mousedownEvent, mousedown);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0; i < 24; i += 1) {\n\t\t\t\ttick = tickTpl.clone();\n\t\t\t\tradian = i / 6 * Math.PI;\n\t\t\t\tvar inner = i > 0 && i < 13;\n\t\t\t\tradius = inner ? innerRadius : outerRadius;\n\t\t\t\ttick.css({\n\t\t\t\t\tleft: dialRadius + Math.sin(radian) * radius - tickRadius,\n\t\t\t\t\ttop: dialRadius - Math.cos(radian) * radius - tickRadius\n\t\t\t\t});\n\t\t\t\tif (inner)\n\t\t\t\t\ttick.css('font-size', '120%');\n\t\t\t\ttick.html(i === 0 ? '00' : i);\n\t\t\t\thoursView.append(tick);\n\t\t\t\ttick.on(mousedownEvent, mousedown);\n\t\t\t}\n\t\t}\n\n\t\t// Minutes view\n\t\tfor (i = 0; i < 60; i += 5) {\n\t\t\ttick = tickTpl.clone();\n\t\t\tradian = i / 30 * Math.PI;\n\t\t\ttick.css({\n\t\t\t\tleft: dialRadius + Math.sin(radian) * outerRadius - tickRadius,\n\t\t\t\ttop: dialRadius - Math.cos(radian) * outerRadius - tickRadius\n\t\t\t});\n\t\t\ttick.css('font-size', '140%');\n\t\t\ttick.html(leadingZero(i));\n\t\t\tminutesView.append(tick);\n\t\t\ttick.on(mousedownEvent, mousedown);\n\t\t}\n\n\t\t// Clicking on minutes view space\n\t\tplate.on(mousedownEvent, function(e) {\n\t\t\tif ($(e.target).closest('.clockpicker-tick').length === 0)\n\t\t\t\tmousedown(e, true);\n\t\t});\n\n\t\t// Mousedown or touchstart\n\t\tfunction mousedown(e, space) {\n\t\t\tvar offset = plate.offset(),\n\t\t\t\t\tisTouch = /^touch/.test(e.type),\n\t\t\t\t\tx0 = offset.left + dialRadius,\n\t\t\t\t\ty0 = offset.top + dialRadius,\n\t\t\t\t\tdx = (isTouch ? e.originalEvent.touches[0] : e).pageX - x0,\n\t\t\t\t\tdy = (isTouch ? e.originalEvent.touches[0] : e).pageY - y0,\n\t\t\t\t\tz = Math.sqrt(dx * dx + dy * dy),\n\t\t\t\t\tmoved = false;\n\n\t\t\t// When clicking on minutes view space, check the mouse position\n\t\t\tif (space && (z < outerRadius - tickRadius || z > outerRadius + tickRadius))\n\t\t\t\treturn;\n\t\t\te.preventDefault();\n\n\t\t\t// Set cursor style of body after 200ms\n\t\t\tvar movingTimer = setTimeout(function(){\n\t\t\t\tself.popover.addClass('clockpicker-moving');\n\t\t\t}, 200);\n\n\t\t\t// Place the canvas to top\n\t\t\tif (svgSupported)\n\t\t\t\tplate.append(self.canvas);\n\n\t\t\t// Clock\n\t\t\tself.setHand(dx, dy, !space, true);\n\n\t\t\t// Mousemove on document\n\t\t\t$doc.off(mousemoveEvent).on(mousemoveEvent, function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tvar isTouch = /^touch/.test(e.type),\n\t\t\t\t\t\tx = (isTouch ? e.originalEvent.touches[0] : e).pageX - x0,\n\t\t\t\t\t\ty = (isTouch ? e.originalEvent.touches[0] : e).pageY - y0;\n\t\t\t\tif (! moved && x === dx && y === dy)\n\t\t\t\t\t// Clicking in chrome on windows will trigger a mousemove event\n\t\t\t\t\treturn;\n\t\t\t\tmoved = true;\n\t\t\t\tself.setHand(x, y, false, true);\n\t\t\t});\n\n\t\t\t// Mouseup on document\n\t\t\t$doc.off(mouseupEvent).on(mouseupEvent, function(e) {\n\t\t\t\t$doc.off(mouseupEvent);\n\t\t\t\te.preventDefault();\n\t\t\t\tvar isTouch = /^touch/.test(e.type),\n\t\t\t\t\t\tx = (isTouch ? e.originalEvent.changedTouches[0] : e).pageX - x0,\n\t\t\t\t\t\ty = (isTouch ? e.originalEvent.changedTouches[0] : e).pageY - y0;\n\t\t\t\tif ((space || moved) && x === dx && y === dy)\n\t\t\t\t\tself.setHand(x, y);\n\t\t\t\tif (self.currentView === 'hours')\n\t\t\t\t\tself.toggleView('minutes', duration / 2);\n\t\t\t\telse\n\t\t\t\t\tif (options.autoclose) {\n\t\t\t\t\t\tself.minutesView.addClass('clockpicker-dial-out');\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\tself.done();\n\t\t\t\t\t\t}, duration / 2);\n\t\t\t\t\t}\n\t\t\t\tplate.prepend(canvas);\n\n\t\t\t\t// Reset cursor style of body\n\t\t\t\tclearTimeout(movingTimer);\n\t\t\t\tself.popover.removeClass('clockpicker-moving');\n\n\t\t\t\t// Unbind mousemove event\n\t\t\t\t$doc.off(mousemoveEvent);\n\t\t\t});\n\t\t}\n\n\t\tif (svgSupported) {\n\t\t\t// Draw clock hands and others\n\t\t\tvar canvas = popover.find('.clockpicker-canvas'),\n\t\t\t\t\tsvg = createSvgElement('svg');\n\t\t\tsvg.setAttribute('class', 'clockpicker-svg');\n\t\t\tsvg.setAttribute('width', diameter);\n\t\t\tsvg.setAttribute('height', diameter);\n\t\t\tvar g = createSvgElement('g');\n\t\t\tg.setAttribute('transform', 'translate(' + dialRadius + ',' + dialRadius + ')');\n\t\t\tvar bearing = createSvgElement('circle');\n\t\t\tbearing.setAttribute('class', 'clockpicker-canvas-bearing');\n\t\t\tbearing.setAttribute('cx', 0);\n\t\t\tbearing.setAttribute('cy', 0);\n\t\t\tbearing.setAttribute('r', 2);\n\t\t\tvar hand = createSvgElement('line');\n\t\t\thand.setAttribute('x1', 0);\n\t\t\thand.setAttribute('y1', 0);\n\t\t\tvar bg = createSvgElement('circle');\n\t\t\tbg.setAttribute('class', 'clockpicker-canvas-bg');\n\t\t\tbg.setAttribute('r', tickRadius);\n\t\t\tvar fg = createSvgElement('circle');\n\t\t\tfg.setAttribute('class', 'clockpicker-canvas-fg');\n\t\t\tfg.setAttribute('r', 5);\n\t\t\tg.appendChild(hand);\n\t\t\tg.appendChild(bg);\n\t\t\tg.appendChild(fg);\n\t\t\tg.appendChild(bearing);\n\t\t\tsvg.appendChild(g);\n\t\t\tcanvas.append(svg);\n\n\t\t\tthis.hand = hand;\n\t\t\tthis.bg = bg;\n\t\t\tthis.fg = fg;\n\t\t\tthis.bearing = bearing;\n\t\t\tthis.g = g;\n\t\t\tthis.canvas = canvas;\n\t\t}\n\n\t\traiseCallback(this.options.init);\n\t}\n\n\tfunction raiseCallback(callbackFunction) {\n\t\tif(callbackFunction && typeof callbackFunction === \"function\")\n\t\t\tcallbackFunction();\n\t}\n\n\t// Default options\n\tClockPicker.DEFAULTS = {\n\t\t'default': '',         // default time, 'now' or '13:14' e.g.\n\t\tfromnow: 0,            // set default time to * milliseconds from now (using with default = 'now')\n\t\tdonetext: 'Done',      // done button text\n\t\tautoclose: false,      // auto close when minute is selected\n\t\tampmclickable: false,  // set am/pm button on itself\n\t\tdarktheme: false,\t\t\t // set to dark theme\n\t\ttwelvehour: true,      // change to 12 hour AM/PM clock from 24 hour\n\t\tvibrate: true          // vibrate the device when dragging clock hand\n\t};\n\n\t// Show or hide popover\n\tClockPicker.prototype.toggle = function() {\n\t\tthis[this.isShown ? 'hide' : 'show']();\n\t};\n\n\t// Set popover position\n\tClockPicker.prototype.locate = function() {\n\t\tvar element = this.element,\n\t\t\t\tpopover = this.popover,\n\t\t\t\toffset = element.offset(),\n\t\t\t\twidth = element.outerWidth(),\n\t\t\t\theight = element.outerHeight(),\n\t\t\t\talign = this.options.align,\n\t\t\t\tself = this;\n\n\t\tpopover.show();\n\t};\n\t// Show popover\n\tClockPicker.prototype.show = function(e){\n\t\tthis.setAMorPM = function(option) {\n\t\t\tvar active = option;\n\t\t\tvar inactive = (option == \"pm\"? \"am\":\"pm\");\n\t\t\tif(this.options.twelvehour) {\n\t\t\t\tthis.amOrPm = active.toUpperCase();\n\t\t\t\tif(!this.options.ampmclickable) {\n\t\t\t\t\tthis.amPmBlock.children('.' + inactive + '-button').removeClass('active');\n\t\t\t\t\tthis.amPmBlock.children('.' + active + '-button').addClass('active');\n\t\t\t\t\tthis.spanAmPm.empty().append(this.amOrPm);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.spanAmPm.children('#click-' + active + '').addClass(\"text-primary\");\n\t\t\t\t\tthis.spanAmPm.children('#click-' + inactive + '').removeClass(\"text-primary\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Not show again\n\t\tif (this.isShown) {\n\t\t\treturn;\n\t\t}\n\t\traiseCallback(this.options.beforeShow);\n\t\t$(':input').each(function() {\n\t\t\t$(this).attr('tabindex', -1);\n\t\t})\n\t\tvar self = this;\n\t\t// Initialize\n\t\tthis.input.blur();\n\t\tthis.popover.addClass('picker--opened');\n\t\tthis.input.addClass('picker__input picker__input--active');\n\t\t$(document.body).css('overflow', 'hidden');\n\t\tif (!this.isAppended) {\n\t\t\t// Append popover to options.container\n\t\t\tif(this.options.hasOwnProperty('container'))\n\t\t\t\tthis.popover.appendTo(this.options.container);\n\t\t\telse\n\t\t\t\tthis.popover.insertAfter(this.input);\n\t\t\tthis.setAMorPM(\"pm\");\n\t\t\t// Reset position when resize\n\t\t\t$win.on('resize.clockpicker' + this.id, function() {\n\t\t\t\tif (self.isShown) {\n\t\t\t\t\tself.locate();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.isAppended = true;\n\t\t}\n\t\t// Get the time\n\t\tvar value = ((this.input.prop('value') || this.options['default'] || '') + '').split(':');\n\t\tif(this.options.twelvehour && !(typeof value[1] === 'undefined')) {\n\t\t\tif(value[1].includes('AM'))\n\t\t\t\tthis.setAMorPM(\"am\");\n\t\t\telse\n\t\t\t\tthis.setAMorPM(\"pm\");\n\t\t\tvalue[1] = value[1].replace(\"AM\", \"\").replace(\"PM\", \"\");\n\t\t}\n\t\tif (value[0] === 'now') {\n\t\t\tvar now = new Date(+ new Date() + this.options.fromnow);\n\t\t\tif (now.getHours() >= 12)\n\t\t\t\tthis.setAMorPM(\"pm\");\n\t\t\telse\n\t\t\t\tthis.setAMorPM(\"am\");\n\t\t\tvalue = [\n\t\t\t\tnow.getHours(),\n\t\t\t\tnow.getMinutes()\n\t\t\t];\n\t\t}\n\t\tthis.hours = + value[0] || 0;\n\t\tthis.minutes = + value[1] || 0;\n\t\tthis.spanHours.html(leadingZero(this.hours));\n\t\tthis.spanMinutes.html(leadingZero(this.minutes));\n\t\t// Toggle to hours view\n\t\tthis.toggleView('hours');\n\t\t// Set position\n\t\tthis.locate();\n\t\tthis.isShown = true;\n\t\t// Hide when clicking or tabbing on any element except the clock and input\n\t\t$doc.on('click.clockpicker.' + this.id + ' focusin.clockpicker.' + this.id, function(e) {\n\t\t\tvar target = $(e.target);\n\t\t\tif (target.closest(self.popover.find('.picker__wrap')).length === 0 && target.closest(self.input).length === 0)\n\t\t\t\tself.hide();\n\t\t});\n\t\t// Hide when ESC is pressed\n\t\t$doc.on('keyup.clockpicker.' + this.id, function(e){\n\t\t\tif (e.keyCode === 27)\n\t\t\t\tself.hide();\n\t\t});\n\t\traiseCallback(this.options.afterShow);\n\t};\n\t// Hide popover\n\tClockPicker.prototype.hide = function() {\n\t\traiseCallback(this.options.beforeHide);\n\t\tthis.input.removeClass('picker__input picker__input--active');\n\t\tthis.popover.removeClass('picker--opened');\n\t\t$(document.body).css('overflow', 'visible');\n\t\tthis.isShown = false;\n\t\t$(':input').each(function(index) {\n\t\t\t$(this).attr('tabindex', index + 1);\n\t\t});\n\t\t// Unbinding events on document\n\t\t$doc.off('click.clockpicker.' + this.id + ' focusin.clockpicker.' + this.id);\n\t\t$doc.off('keyup.clockpicker.' + this.id);\n\t\tthis.popover.hide();\n\t\traiseCallback(this.options.afterHide);\n\t};\n\t// Toggle to hours or minutes view\n\tClockPicker.prototype.toggleView = function(view, delay) {\n\t\tvar raiseAfterHourSelect = false;\n\t\tif (view === 'minutes' && $(this.hoursView).css(\"visibility\") === \"visible\") {\n\t\t\traiseCallback(this.options.beforeHourSelect);\n\t\t\traiseAfterHourSelect = true;\n\t\t}\n\t\tvar isHours = view === 'hours',\n\t\t\t\tnextView = isHours ? this.hoursView : this.minutesView,\n\t\t\t\thideView = isHours ? this.minutesView : this.hoursView;\n\t\tthis.currentView = view;\n\n\t\tthis.spanHours.toggleClass('text-primary', isHours);\n\t\tthis.spanMinutes.toggleClass('text-primary', ! isHours);\n\n\t\t// Let's make transitions\n\t\thideView.addClass('clockpicker-dial-out');\n\t\tnextView.css('visibility', 'visible').removeClass('clockpicker-dial-out');\n\n\t\t// Reset clock hand\n\t\tthis.resetClock(delay);\n\n\t\t// After transitions ended\n\t\tclearTimeout(this.toggleViewTimer);\n\t\tthis.toggleViewTimer = setTimeout(function() {\n\t\t\thideView.css('visibility', 'hidden');\n\t\t}, duration);\n\n\t\tif (raiseAfterHourSelect)\n\t\t\traiseCallback(this.options.afterHourSelect);\n\t};\n\n\t// Reset clock hand\n\tClockPicker.prototype.resetClock = function(delay) {\n\t\tvar view = this.currentView,\n\t\t\t\tvalue = this[view],\n\t\t\t\tisHours = view === 'hours',\n\t\t\t\tunit = Math.PI / (isHours ? 6 : 30),\n\t\t\t\tradian = value * unit,\n\t\t\t\tradius = isHours && value > 0 && value < 13 ? innerRadius : outerRadius,\n\t\t\t\tx = Math.sin(radian) * radius,\n\t\t\t\ty = - Math.cos(radian) * radius,\n\t\t\t\tself = this;\n\n\t\tif(svgSupported && delay) {\n\t\t\tself.canvas.addClass('clockpicker-canvas-out');\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.canvas.removeClass('clockpicker-canvas-out');\n\t\t\t\tself.setHand(x, y);\n\t\t\t}, delay);\n\t\t} else\n\t\t\tthis.setHand(x, y);\n\t};\n\n\t// Set clock hand to (x, y)\n\tClockPicker.prototype.setHand = function(x, y, roundBy5, dragging) {\n\t\tvar radian = Math.atan2(x, - y),\n\t\t\t\tisHours = this.currentView === 'hours',\n\t\t\t\tunit = Math.PI / (isHours || roundBy5? 6 : 30),\n\t\t\t\tz = Math.sqrt(x * x + y * y),\n\t\t\t\toptions = this.options,\n\t\t\t\tinner = isHours && z < (outerRadius + innerRadius) / 2,\n\t\t\t\tradius = inner ? innerRadius : outerRadius,\n\t\t\t\tvalue;\n\n\t\tif (options.twelvehour)\n\t\t\tradius = outerRadius;\n\n\t\t// Radian should in range [0, 2PI]\n\t\tif (radian < 0)\n\t\t\tradian = Math.PI * 2 + radian;\n\n\t\t// Get the round value\n\t\tvalue = Math.round(radian / unit);\n\n\t\t// Get the round radian\n\t\tradian = value * unit;\n\n\t\t// Correct the hours or minutes\n\t\tif(options.twelvehour) {\n\t\t\tif(isHours) {\n\t\t\t\tif(value === 0)\n\t\t\t\t\tvalue = 12;\n\t\t\t} else {\n\t\t\t\tif(roundBy5)\n\t\t\t\t\tvalue *= 5;\n\t\t\t\tif(value === 60)\n\t\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif(isHours) {\n\t\t\t\tif(value === 12)\n\t\t\t\t\tvalue = 0;\n\t\t\t\tvalue = inner ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\n\t\t\t} else {\n\t\t\t\tif(roundBy5)\n\t\t\t\t\tvalue *= 5;\n\t\t\t\tif(value === 60)\n\t\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t}\n\t\tif (isHours)\n\t\t\tthis.fg.setAttribute('class', 'clockpicker-canvas-fg');\n\t\telse {\n\t\t\tif(value % 5 == 0)\n\t\t\t\tthis.fg.setAttribute('class', 'clockpicker-canvas-fg');\n\t\t\telse\n\t\t\t\tthis.fg.setAttribute('class', 'clockpicker-canvas-fg active');\n\t\t}\n\n\t\t// Once hours or minutes changed, vibrate the device\n\t\tif (this[this.currentView] !== value)\n\t\t\tif (vibrate && this.options.vibrate)\n\t\t\t\t// Do not vibrate too frequently\n\t\t\t\tif (! this.vibrateTimer) {\n\t\t\t\t\tnavigator[vibrate](10);\n\t\t\t\t\tthis.vibrateTimer = setTimeout($.proxy(function(){\n\t\t\t\t\t\tthis.vibrateTimer = null;\n\t\t\t\t\t}, this), 100);\n\t\t\t\t}\n\n\t\tthis[this.currentView] = value;\n\t\tthis[isHours ? 'spanHours' : 'spanMinutes'].html(leadingZero(value));\n\n\t\t// If svg is not supported, just add an active class to the tick\n\t\tif (! svgSupported) {\n\t\t\tthis[isHours ? 'hoursView' : 'minutesView'].find('.clockpicker-tick').each(function(){\n\t\t\t\tvar tick = $(this);\n\t\t\t\ttick.toggleClass('active', value === + tick.html());\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Place clock hand at the top when dragging\n\t\tif (dragging || (! isHours && value % 5)) {\n\t\t\tthis.g.insertBefore(this.hand, this.bearing);\n\t\t\tthis.g.insertBefore(this.bg, this.fg);\n\t\t\tthis.bg.setAttribute('class', 'clockpicker-canvas-bg clockpicker-canvas-bg-trans');\n\t\t} else {\n\t\t\t// Or place it at the bottom\n\t\t\tthis.g.insertBefore(this.hand, this.bg);\n\t\t\tthis.g.insertBefore(this.fg, this.bg);\n\t\t\tthis.bg.setAttribute('class', 'clockpicker-canvas-bg');\n\t\t}\n\n\t\t// Set clock hand and others' position\n\t\tvar cx1 = Math.sin(radian) * (radius - tickRadius),\n\t\t\t  cy1 = - Math.cos(radian) * (radius - tickRadius),\n\t\t    cx2 = Math.sin(radian) * radius,\n\t\t\t  cy2 = - Math.cos(radian) * radius;\n\t\tthis.hand.setAttribute('x2', cx1);\n\t\tthis.hand.setAttribute('y2', cy1);\n\t\tthis.bg.setAttribute('cx', cx2);\n\t\tthis.bg.setAttribute('cy', cy2);\n\t\tthis.fg.setAttribute('cx', cx2);\n\t\tthis.fg.setAttribute('cy', cy2);\n\t};\n\n\t// Hours and minutes are selected\n\tClockPicker.prototype.done = function() {\n\t\traiseCallback(this.options.beforeDone);\n\t\tthis.hide();\n\t\tthis.label.addClass('active');\n\n\t\tvar last = this.input.prop('value'),\n\t\t\t\tvalue = leadingZero(this.hours) + ':' + leadingZero(this.minutes);\n\t\tif (this.options.twelvehour)\n\t\t\tvalue = value + this.amOrPm;\n\n\t\tthis.input.prop('value', value);\n\t\tif(value !== last) {\n\t\t\tthis.input.triggerHandler('change');\n\t\t\tif(!this.isInput)\n\t\t\t\tthis.element.trigger('change');\n\t\t}\n\n\t\tif(this.options.autoclose)\n\t\t\tthis.input.trigger('blur');\n\n\t\traiseCallback(this.options.afterDone);\n\t};\n\n\t// Remove clockpicker from input\n\tClockPicker.prototype.remove = function() {\n\t\tthis.element.removeData('clockpicker');\n\t\tthis.input.off('focus.clockpicker click.clockpicker');\n\t\tif (this.isShown)\n\t\t\tthis.hide();\n\t\tif (this.isAppended) {\n\t\t\t$win.off('resize.clockpicker' + this.id);\n\t\t\tthis.popover.remove();\n\t\t}\n\t};\n\n\t// Extends $.fn.clockpicker\n\t$.fn.pickatime = function(option){\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\treturn this.each(function(){\n\t\t\tvar $this = $(this),\n\t\t\t\t\tdata = $this.data('clockpicker');\n\t\t\tif (!data) {\n\t\t\t\tvar options = $.extend({}, ClockPicker.DEFAULTS, $this.data(), typeof option == 'object' && option);\n\t\t\t\t$this.data('clockpicker', new ClockPicker($this, options));\n\t\t\t} else {\n\t\t\t\t// Manual operatsions. show, hide, remove, e.g.\n\t\t\t\tif (typeof data[option] === 'function')\n\t\t\t\t\tdata[option].apply(data, args);\n\t\t\t}\n\t\t});\n\t};\n}());\n"],"sourceRoot":"/source/"}